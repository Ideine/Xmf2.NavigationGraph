root = true

[*.{csproj,props,targets,nuspec,sh,ps1,cmd,bat,cs,csx,cake}]
trim_trailing_whitespace = true
indent_style = tab
insert_final_newline = false
charset = utf-8-bom

[*.{csproj,props,targets,nuspec,sh,cs,csx,cake}]
end_of_line = lf

[*.csproj]
indent_size = 2
tab_width = 2

[*.{props,targets,nuspec}]
indent_size = 2
tab_width = 2

[*.sh]
indent_size = 4
tab_width = 4

[*.{ps1,cmd,bat}]
indent_size = 4
tab_width = 4
end_of_line = crlf

[*.{cs,csx,cake}]
indent_size = 4
tab_width = 4

# use of this
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# predefined type (int instead of Int32)
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# visibility modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async
dotnet_style_readonly_field = true:error

# parentheses 
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:none

# Expression - level
dotnet_style_object_initializer = true:error
dotnet_style_collection_initializer = true:error
dotnet_style_explicit_tuple_names = true:error
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning

# Null checking
dotnet_style_coalesce_expression = true:error
dotnet_style_null_propagation = true:error

# implicit and explicit types
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Expression bodied member
csharp_style_expression_bodied_methods = true:none
csharp_style_expression_bodied_constructors = true:none
csharp_style_expression_bodied_operators = true:none
csharp_style_expression_bodied_properties = true:error
csharp_style_expression_bodied_indexers = true:error
csharp_style_expression_bodied_accessors = true:error

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_pattern_matching_over_as_with_null_check = true:error

# Inlined variable declaration
csharp_style_inlined_variable_declaration = true:error

# Expression level preferences
csharp_prefer_simple_default_expression = true:error
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:none

# Null checking preferences
csharp_style_conditional_delegate_call = true:error
csharp_style_throw_expression = true:suggestion

# Code block preferences
csharp_prefer_braces = true:error

# Formatting conventions
dotnet_sort_system_directives_first = true

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_semicolon_in_for_statement = true

csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore

csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = true

csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = none
csharp_space_between_square_brackets = false

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

##########################
###### Naming rules ######
##########################

# define styles
dotnet_naming_style.ALL_UPPER.word_separator = _
dotnet_naming_style.ALL_UPPER.capitalization = all_upper

dotnet_naming_style.PascalCase.capitalization = pascal_case

dotnet_naming_style.camelCase.capitalization = camel_case

#### Namespace ####
dotnet_naming_symbols.namespace.applicable_kinds = namespace
dotnet_naming_rule.namespace_name.symbols = namespace
dotnet_naming_rule.namespace_name.style = PascalCase
dotnet_naming_rule.namespace_name.severity = warning

#### Class, struct, interface, enum, delegate ####
dotnet_naming_symbols.class.applicable_kinds = class,struct,enum
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.delegate.applicable_kinds = delegate

dotnet_naming_rule.class_name.symbols = class
dotnet_naming_rule.class_name.style = PascalCase
dotnet_naming_rule.class_name.severity = warning

dotnet_naming_rule.interface_name.symbols = interface
dotnet_naming_rule.interface_name.style = InterfaceName
dotnet_naming_rule.interface_name.severity = warning
dotnet_naming_style.InterfaceName.capitalization = pascal_case
dotnet_naming_style.InterfaceName.required_prefix = I

dotnet_naming_rule.delegate_name.symbols = delegate
dotnet_naming_rule.delegate_name.style = PascalCase
dotnet_naming_rule.delegate_name.severity = warning

# define property types
dotnet_naming_symbols.property.applicable_kinds = property,event

dotnet_naming_rule.property_name.symbols = property
dotnet_naming_rule.property_name.style = PascalCase
dotnet_naming_rule.property_name.severity = error

# define method types
dotnet_naming_symbols.method.applicable_kinds = method,local_function

dotnet_naming_rule.property_name.symbols = method
dotnet_naming_rule.property_name.style = PascalCase
dotnet_naming_rule.property_name.severity = error

# define variable in method
dotnet_naming_symbols.const_variable.applicable_kinds = local
dotnet_naming_symbols.const_variable.applicable_accessibilities = *
dotnet_naming_symbols.const_variable.required_modifiers = const

dotnet_naming_symbols.variable.applicable_kinds = parameter,local

dotnet_naming_rule.const_variable_must_be_uppercase.symbols = const_variable
dotnet_naming_rule.const_variable_must_be_uppercase.style = ALL_UPPER
dotnet_naming_rule.const_variable_must_be_uppercase.severity = error

dotnet_naming_rule.variable_name.symbols = variable
dotnet_naming_rule.variable_name.style = camelCase
dotnet_naming_rule.variable_name.severity = error

# define generic type
dotnet_naming_symbols.generic_type.applicable_kinds = type_parameter

dotnet_naming_rule.variable_name.symbols = generic_type
dotnet_naming_rule.variable_name.style = GenericTypeName
dotnet_naming_rule.variable_name.severity = error
dotnet_naming_style.GenericTypeName.capitalization = pascal_case
dotnet_naming_style.GenericTypeName.required_prefix = T

# define fields types
dotnet_naming_symbols.const_fields.applicable_kinds = field
dotnet_naming_symbols.const_fields.applicable_accessibilities = *
dotnet_naming_symbols.const_fields.required_modifiers = const

dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.applicable_accessibilities = *
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static,readonly

dotnet_naming_symbols.non_private_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_fields.applicable_accessibilities = public,internal,friend,protected,protected_internal,protected_friend

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_rule.const_field_must_be_uppercase.symbols = const_fields
dotnet_naming_rule.const_field_must_be_uppercase.style = ALL_UPPER
dotnet_naming_rule.const_field_must_be_uppercase.severity = error

dotnet_naming_rule.static_readonly_field_must_be_uppercase.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_field_must_be_uppercase.style = ALL_UPPER
dotnet_naming_rule.static_readonly_field_must_be_uppercase.severity = error

dotnet_naming_rule.non_private_field_name.symbols = non_private_fields
dotnet_naming_rule.non_private_field_name.style = PascalCase
dotnet_naming_rule.non_private_field_name.severity = error

dotnet_naming_rule.private_field_name.symbols = private_fields
dotnet_naming_rule.private_field_name.style = PrivateFieldName
dotnet_naming_rule.private_field_name.severity = error
dotnet_naming_style.PrivateFieldName.capitalization = camel_case
dotnet_naming_style.PrivateFieldName.required_prefix = _

[*.{Localization,ComponentColor}.cs]
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = false:none
csharp_style_expression_bodied_indexers = false:none
csharp_style_expression_bodied_accessors = false:none
dotnet_style_qualification_for_field = false:none
dotnet_style_qualification_for_property = false:none
dotnet_style_qualification_for_method = false:none
dotnet_style_qualification_for_event = false:none